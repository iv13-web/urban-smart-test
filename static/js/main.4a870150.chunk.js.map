{"version":3,"sources":["components/PrivateRoute.js","store/authSlice.js","pages/Home.js","hooks/useUpdatedEffect.js","pages/Profile.js","store/initSlice.js","App.js","reportWebVitals.js","utils/storage.js","store/middlewares/localStorage.js","store/store.js","index.js"],"names":["PrivateRoute","Component","component","rest","isSignedIn","useSelector","state","auth","render","props","to","CORRECT_CREDENTIALS","initialState","currentUser","enteredCredentialsValidity","authSlice","createSlice","name","reducers","initAuth","payload","checkCredentialsValidity","login","password","correctLogin","correctPassword","signin","signout","authReducer","reducer","actions","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","Home","s","history","useHistory","useState","setLogin","setPassword","dispatch","useDispatch","validCredentials","callback","dependencies","firstRenderRef","useRef","useEffect","current","useUpdatedEffect","Container","maxWidth","className","noValidate","onSubmit","push","TextField","variant","required","fullWidth","label","autoFocus","value","onChange","e","target","Button","type","color","disabled","wrapper","justifyContent","Profile","onClick","initSlice","init","initReducer","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","storage","key","JSON","parse","localStorage","getItem","data","setItem","stringify","localStorageMiddleware","store","next","action","match","storedAuthStatus","storedCurrentUser","getState","configureStore","middleware","getDefaultMiddleware","concat","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a870150.chunk.js","sourcesContent":["import {useSelector} from 'react-redux'\r\nimport {Route, Redirect} from 'react-router-dom'\r\n\r\nexport default function PrivateRoute({component: Component, ...rest}) {\r\n  const isSignedIn = useSelector(state => state.auth.isSignedIn)\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => (\r\n        isSignedIn\r\n          ? <Component {...props} />\r\n          : <Redirect to='/'/>\r\n      )}\r\n    />\r\n  )\r\n}\r\n","import {createSlice} from '@reduxjs/toolkit'\r\n\r\nconst CORRECT_CREDENTIALS = {\r\n\tlogin: 'developer21',\r\n\tpassword: '123456'\r\n}\r\n\r\nconst initialState = {\r\n\tisSignedIn: false,\r\n\tcurrentUser: null,\r\n\tenteredCredentialsValidity: false\r\n}\r\n\r\nconst authSlice = createSlice({\r\n\tname: 'auth',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tinitAuth: (state, {payload}) => {\r\n\t\t\tstate.isSignedIn = payload.isSignedIn || false\r\n\t\t\tstate.currentUser = payload.currentUser || null\r\n\t\t},\r\n\t\tcheckCredentialsValidity: (state, {payload}) => {\r\n\t\t\tconst {login, password} = payload\r\n\t\t\tconst correctLogin = login === CORRECT_CREDENTIALS.login\r\n\t\t\tconst correctPassword = password === CORRECT_CREDENTIALS.password\r\n\t\t\tstate.enteredCredentialsValidity = correctLogin && correctPassword\r\n\t\t},\r\n\t\tsignin: (state, {payload}) => {\r\n\t\t\tif (state.enteredCredentialsValidity) {\r\n\t\t\t\tstate.isSignedIn = true\r\n\t\t\t\tstate.currentUser = payload\r\n\t\t\t}\r\n\t\t},\r\n\t\tsignout: () => {\r\n\t\t\treturn initialState\r\n\t\t}\r\n\t}\r\n})\r\n\r\nexport const authReducer =  authSlice.reducer\r\nexport const {initAuth, checkCredentialsValidity, signin, signout} = authSlice.actions\r\n","import {Button, Container, makeStyles, TextField} from '@material-ui/core'\r\nimport {checkCredentialsValidity, signin} from '../store/authSlice'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport useUpdatedEffect from '../hooks/useUpdatedEffect'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useState} from 'react'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  }\r\n}))\r\n\r\nexport default function Home() {\r\n  const s = useStyles()\r\n  const history = useHistory()\r\n  const [login, setLogin] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const dispatch = useDispatch()\r\n  const validCredentials = useSelector(state => {\r\n    return state.auth.enteredCredentialsValidity\r\n  })\r\n\r\n  useUpdatedEffect(() => {\r\n    dispatch(checkCredentialsValidity({login, password}))\r\n  }, [login, password])\r\n\r\n  const handleLoginChange = e => setLogin(e.target.value)\r\n\r\n  const handlePasswordChange = e => setPassword(e.target.value)\r\n\r\n  const handleSubmit = () => {\r\n    dispatch(signin(login))\r\n    history.push('/profile')\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={s.paper}>\r\n        <form className={s.form} noValidate onSubmit={handleSubmit}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            label=\"Логин\"\r\n            autoFocus\r\n            value={login}\r\n            onChange={handleLoginChange}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            label=\"Пароль\"\r\n            onChange={handlePasswordChange}\r\n            value={password}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={s.submit}\r\n            disabled={!validCredentials}\r\n          >\r\n            войти\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n","import {useEffect, useRef} from \"react\"\r\n\r\nexport default function useUpdatedEffect(callback, dependencies) {\r\n\tconst firstRenderRef = useRef(true)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (firstRenderRef.current) {\r\n\t\t\tfirstRenderRef.current = false\r\n\t\t\treturn\r\n\t\t}\r\n\t\treturn callback()\r\n\t}, dependencies)\r\n}\r\n","import {useDispatch, useSelector} from 'react-redux'\r\nimport {Button, makeStyles} from '@material-ui/core'\r\nimport {signout} from '../store/authSlice'\r\n\r\nconst useStyles = makeStyles({\r\n  wrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  }\r\n})\r\n\r\nexport default function Profile() {\r\n  const s = useStyles()\r\n  const dispatch = useDispatch()\r\n  const currentUser = useSelector(state => state.auth.currentUser)\r\n  const handleSignout = () => {\r\n    dispatch(signout())\r\n  }\r\n\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <h1>{currentUser}</h1>\r\n      <Button\r\n        variant='outlined'\r\n        onClick={handleSignout}\r\n      >\r\n        Выйти\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n","import {createSlice} from '@reduxjs/toolkit'\r\n\r\nconst initSlice = createSlice({\r\n\tname: 'init',\r\n\tinitialState: {\r\n\t\tinit: false\r\n\t},\r\n\treducers: {\r\n\t\tinit: (state) => {\r\n\t\t\tstate.init = true\r\n\t\t},\r\n\t}\r\n})\r\n\r\nexport const initReducer = initSlice.reducer\r\nexport const {init} = initSlice.actions\r\n","import {HashRouter, Route, Switch} from 'react-router-dom'\nimport PrivateRoute from './components/PrivateRoute'\nimport Home from './pages/Home'\nimport Profile from './pages/Profile'\nimport {useDispatch} from 'react-redux'\nimport {init} from './store/initSlice'\n\nexport default function App() {\n  const dispatch = useDispatch()\n  dispatch(init())\n\n  return (\n    <HashRouter basename='/'>\n      <Switch>\n        <Route exact path='/' component={Home}/>\n        <PrivateRoute path='/profile' component={Profile}/>\n      </Switch>\n    </HashRouter>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export function storage (key, payload) {\r\n\tif (!payload) {\r\n\t\ttry {\r\n\t\t\treturn JSON.parse(localStorage.getItem(key))\r\n\t\t} catch (e) {}\r\n\t}\r\n\tconst {data} = payload\r\n\tlocalStorage.setItem(key, JSON.stringify(data))\r\n}\r\n","import {init} from '../initSlice'\r\nimport {initAuth, signin, signout} from '../authSlice'\r\nimport {storage} from '../../utils/storage'\r\n\r\nexport const localStorageMiddleware = store => next => action => {\r\n\tnext(action)\r\n\r\n\tif (init.match(action)) {\r\n\t\tconst storedAuthStatus = storage('isSignedIn')\r\n\t\tconst storedCurrentUser = storage('currentUser')\r\n\t\tstore.dispatch(initAuth({\r\n\t\t\tisSignedIn: storedAuthStatus,\r\n\t\t\tcurrentUser: storedCurrentUser\r\n\t\t}))\r\n\t}\r\n\tif (signin.match(action) || signout.match(action)) {\r\n\t\tconst isSignedIn = store.getState().auth.isSignedIn\r\n\t\tconst currentUser = store.getState().auth.currentUser\r\n\t\tstorage('isSignedIn', {data: isSignedIn})\r\n\t\tstorage('currentUser', {data: currentUser})\r\n\t}\r\n}\r\n","import {configureStore} from '@reduxjs/toolkit'\r\nimport {authReducer} from './authSlice'\r\nimport {initReducer} from './initSlice'\r\nimport {localStorageMiddleware} from './middlewares/localStorage'\r\n\r\nexport const store = configureStore({\r\n\treducer: {\r\n\t\tinit: initReducer,\r\n\t\tauth: authReducer\r\n\t},\r\n\tmiddleware: (getDefaultMiddleware) => {\r\n\t\treturn getDefaultMiddleware().concat(localStorageMiddleware)\r\n\t}\r\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport {Provider} from 'react-redux'\nimport {store} from './store/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}